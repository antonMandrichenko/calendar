{"version":3,"sources":["components/TaskInDate/index.js","components/DayView/index.js","components/ShowMonthDays/index.js","containers/DatesContainer/index.js","logic/index.js","components/ButtonClose/index.js","components/TaskForm/index.js","components/ButtonTaskCompleted/index.js","components/TaskView/index.js","components/ButtonAdd/index.js","containers/TasksContainer/index.js","components/WeekView/index.js","containers/WeekContainer/index.js","components/Arrow/index.js","components/MonthHeader/index.js","containers/Header/index.js","containers/CalendarTasks/index.js","containers/App/index.js","index.js"],"names":["TaskInDate","react_default","a","createElement","className","DayView","_ref","day","date","toSelectedDate","tasks","onClick","data-date","map","task","Object","keys","length","components_TaskInDate","key","ShowMonth","daysOfMonth","i","monthArr","slice","indexOf","monthSelected","components_DayView","DatesContainer","selectedDate","startOfMonth","moment","startOf","startCalendar","clone","arrayOfCalendar","startWeekday","weekday","subtract","push","format","add","makeCalendar","ShowMonthDays","ButtonClose","closeFormForAddTask","TaskForm","addTask","changedTask","changeTask","inputValue","inputTime","toInputDescription","e","target","dataset","desc","value","time","description","id","components_ButtonClose","htmlFor","type","data-time","defaultValue","onChange","data-desc","placeholder","descr","completed","ButtonTaskCompleted","changeCompleted","TaskView","deleteTask","components_ButtonTaskCompleted","ButtonAdd","showFormForAddTask","TasksContainer","isAddTask","dayTasks","filter","components_TaskForm","Fragment","components_TaskView","components_ButtonAdd","WeekView","WeekContainer","weekdays","Sun","shift","getWeekdays","components_WeekView","Arrow","direction","aria-hidden","MonthHeader","concat","month","get","selectedMonthByLetters","Header","components_Arrow","components_MonthHeader","CalendarAndTasks","_useState","useState","_useState2","slicedToArray","setTasks","_useState3","Set","_useState4","datesSet","setDatesSet","_useState5","_useState6","setSelectedDate","_useState7","_useState8","setId","_useState9","_useState10","setIsAddTask","_useState11","_useState12","setChangedTask","changeDate","containers_Header","containers_WeekContainer","containers_DatesContainer","containers_TasksContainer","preventDefault","has","defineProperty","toConsumableArray","alert","innerHTML","item","objectSpread","App","containers_CalendarTasks","ReactDOM","render","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.788f289a.chunk.js","sourcesContent":["import React from 'react';\nimport './TaskInDate.css';\n\nconst TaskInDate = () => {\n  return (\n    <div className=\"TaskInDate\"></div>\n  );\n};\n\nexport default TaskInDate;\n","import React from 'react';\nimport './DaysView.css';\nimport TaskInDate from \"../TaskInDate\";\n\nconst DayView = ({\n                   day,\n                   date,\n                   className,\n                   toSelectedDate,\n                   tasks\n}) => {\n\n  return (\n    <div className={`DayView DayView__`+ className}\n         onClick={toSelectedDate}\n         data-date={date}>\n      {tasks.map((task) =>\n        task[Object.keys(task)[0]].length !== 0\n        && Object.keys(task)[0] === date\n          ? <TaskInDate key={date}/>\n          : null\n      )}\n      {day}\n    </div>\n  );\n};\n\nexport default DayView;\n","import React from 'react';\nimport DayView from \"../../components/DayView\";\nimport './ShowMonth.css';\n\nconst ShowMonth = ({\n                     daysOfMonth,\n                     date,\n                     toSelectedDate,\n                     tasks\n}) => {\n\n  return (\n    <div className=\"DaysContainer\">\n      {daysOfMonth.map((day, i) => {\n          const monthArr = day.slice(day.indexOf('.')+1, day.indexOf('.')+3);\n          const monthSelected = date.slice(date.indexOf('.')+1, date.indexOf('.')+3);\n          return <DayView key={i}\n                          tasks={tasks}\n                          day={day.slice(0, day.indexOf('.'))}\n                          date={day}\n                          className= {\n                            monthArr !== monthSelected\n                              ? 'noactive'\n                              : date === day\n                                ? 'selected'\n                                : 'active'\n                          }\n                          toSelectedDate={toSelectedDate}\n          />\n        }\n      )}\n    </div>\n  );\n};\n\nexport default ShowMonth;\n","import React from 'react';\nimport {makeCalendar} from '../../logic';\nimport ShowMonth from \"../../components/ShowMonthDays\";\nimport './DatesContainer.css';\n\nconst DatesContainer = ({ selectedDate,\n                          toSelectedDate,\n                          tasks\n}) => {\n\n  const daysOfMonth = makeCalendar(selectedDate);\n\n  return (\n    <div className=\"DatesContainer\">\n      <ShowMonth daysOfMonth={daysOfMonth}\n                 date={selectedDate.format('D.MM.YYYY')}\n                 tasks={tasks}\n                 toSelectedDate={toSelectedDate}\n      />\n    </div>\n  );\n};\n\nexport default DatesContainer;\n","import * as moment from 'moment';\n\nexport const makeCalendar = (date) => {\n  const startOfMonth = moment(date).startOf('month');\n  const startCalendar = startOfMonth.clone();\n  const lengthOfCalendar = 41;\n  const arrayOfCalendar = [];\n  const startWeekday = startOfMonth.weekday();\n  // const weekdays = getWeekdays();\n  startCalendar.subtract(startWeekday-1, 'days');\n  for(let i = 0; i <= lengthOfCalendar; i++) {\n    arrayOfCalendar.push(startCalendar.format('D.MM.YYYY'));\n    startCalendar.add(1, 'days');\n  }\n  return arrayOfCalendar;\n};\n\nexport const getWeekdays = () => {\n  const weekdays = moment.weekdaysShort();\n  const Sun = weekdays.shift();\n  weekdays.push(Sun);\n  return weekdays;\n};\n\nexport const selectedMonthByLetters = (date) => {\n  return `${moment.months().filter((month,i) =>\n    i === moment(date).get(\"month\"))[0]} ${moment(date).get('year')}`\n};\n","import React from 'react';\nimport './ButtonClose.css';\n\nconst ButtonClose = ({closeFormForAddTask}) => {\n\n  return (\n    <div className=\"ButtonClose btn btn-light\"\n         onClick={closeFormForAddTask}>\n      X\n    </div>\n  );\n};\n\nexport default ButtonClose;\n","import React from 'react';\nimport * as moment from 'moment';\nimport ButtonClose from '../../components/ButtonClose';\nimport './newTaskForm.css';\n\nconst TaskForm = ({ addTask,\n                    selectedDate,\n                    closeFormForAddTask,\n                    changedTask,\n                    changeTask\n}) => {\n\n  let inputValue = '';\n  let inputTime = '';\n\n  const toInputDescription = (e) => {\n    if(e.target.dataset.desc === 'Description')\n      inputValue = e.target.value;\n    if(e.target.dataset.time === 'Time')\n      inputTime = e.target.value;\n  };\n\n  if(inputValue === \"\") inputValue = changedTask.description;\n  if(inputTime === \"\") inputTime = changedTask.time;\n\n  return (\n\n    changedTask.id !== ''\n      ? <form className=\"TaskForm\">\n          <div><ButtonClose closeFormForAddTask={closeFormForAddTask}/></div>\n          <h3 className=\"text-center\">Change task</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputDescription\">Time</label>\n            <input type=\"time\"\n                   className=\"form-control\"\n                   id=\"inputDescription\"\n                   data-time=\"Time\"\n                   defaultValue={changedTask.time}\n                   onChange={(e) => {toInputDescription(e)}}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputDescription\">Description</label>\n            <input type=\"text\"\n                   className=\"form-control\"\n                   id=\"inputDescription\"\n                   defaultValue={changedTask.description}\n                   data-desc=\"Description\"\n                   onChange={(e) => {toInputDescription(e)}}\n            />\n          </div>\n          <button type=\"submit\"\n                  onClick={(e)=>{changeTask(e,changedTask.id,inputValue, inputTime)}}\n                  className=\"btn btn-primary\">\n            Change task\n          </button>\n      </form>\n    : <form className=\"TaskForm\">\n        <div><ButtonClose closeFormForAddTask={closeFormForAddTask}/></div>\n        <h3 className=\"text-center\">New task</h3>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputDescription\">Time</label>\n          <input type=\"time\"\n                 className=\"form-control\"\n                 id=\"inputDescription\"\n                 placeholder=\"Time\"\n                 data-time=\"Time\"\n                 onChange={(e) => {toInputDescription(e)}}/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputDescription\">Description</label>\n          <input type=\"text\"\n                 className=\"form-control\"\n                 id=\"inputDescription\"\n                 placeholder=\"Description\"\n                 data-desc=\"Description\"\n                 onChange={(e) => {toInputDescription(e)}}/>\n        </div>\n        <button type=\"submit\"\n                onClick={(e)=>{addTask(e,moment(selectedDate).format('D.MM.YYYY'),{descr: inputValue, time: inputTime, completed: false})}}\n                className=\"btn btn-primary\">\n          Add task\n        </button>\n      </form>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport './ButtonTaskCompleted.css';\n\nconst ButtonTaskCompleted = ({completed, date, id, changeCompleted}) => {\n  return (\n    <div className=\"ButtonTaskCompleted\"\n         onClick={()=>{changeCompleted(id, date, completed)}}>\n      {completed\n        ? <i className=\"fas fa-star\"></i>\n        : <i className=\"far fa-star\"></i>\n      }\n    </div>\n  );\n};\n\nexport default ButtonTaskCompleted;\n","import React from 'react';\nimport * as moment from 'moment';\nimport ButtonTaskCompleted from \"../ButtonTaskCompleted\";\nimport './TaskView.css';\n\nconst TaskView = ({ description,\n                    deleteTask,\n                    selectedDate,\n                    changeTask,\n                    changeCompleted\n}) => {\n\n  const date = moment(selectedDate).format('D.MM.YYYY');\n\n  return (\n    <div className={\"TaskView\"}>\n      <div className={\"TaskView__task\"}>\n        <div className={\"TaskView__time\"}>{description.time}</div>\n        <div className={!description.completed ? \"TaskView__title\" : \"TaskView__title_completed\"}>{description.descr}</div>\n      </div>\n      <div className={\"TaskView__icons\"}>\n        <div className={\"TaskView__change\"} onClick={(e)=>{changeTask(e, description.id, description.descr,  description.time)}}><i className=\"fas fa-pen\"></i></div>\n        <ButtonTaskCompleted completed={description.completed}\n                             id={description.id}\n                             date={date}\n                             changeCompleted={changeCompleted}\n        />\n        <div className={\"TaskView__delete\"} onClick={()=>{deleteTask(description.id, date)}}><i className=\"fas fa-trash-alt\"></i></div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskView;\n","import React from 'react';\nimport './ButtonAdd.css';\n\nconst ButtonAdd = ({showFormForAddTask}) => {\n\n  return (\n    <div className={\"ButtonAdd\"} onClick={showFormForAddTask}>\n      Add task (event)\n      <div className={\"ButtonAdd__icon\"}><i className=\"far fa-calendar-plus\"></i></div>\n      </div>\n  );\n};\n\nexport default ButtonAdd;\n","import React from 'react';\nimport * as moment from 'moment';\nimport TaskForm from '../../components/TaskForm';\nimport TaskView from '../../components/TaskView';\nimport ButtonAdd from \"../../components/ButtonAdd\";\nimport './TasksContainer.css';\n\nconst TasksContainer = ({ isAddTask,\n                          selectedDate,\n                          addTask,\n                          tasks,\n                          deleteTask,\n                          showFormForAddTask,\n                          closeFormForAddTask,\n                          changeTask,\n                          changedTask,\n                          changeCompleted\n}) => {\n\n  const dayTasks = tasks.filter((task) =>\n    Object.keys(task)[0] === moment(selectedDate).format('D.MM.YYYY')\n  )[0];\n\n  let key;\n\n  if(dayTasks) {\n    key = Object.keys(dayTasks)[0];\n  }\n\n  return (\n    <div className=\"TasksContainer\">\n      {isAddTask\n        ? <TaskForm selectedDate={selectedDate}\n                    addTask={addTask}\n                    closeFormForAddTask={closeFormForAddTask}\n                    changedTask={changedTask}\n                    changeTask={changeTask}\n        />\n        : dayTasks\n          ? <>\n              {dayTasks[key].map((description, i) =>\n                <TaskView key={i}\n                          description={description}\n                          deleteTask={deleteTask}\n                          selectedDate={selectedDate}\n                          changeTask={changeTask}\n                          changeCompleted={changeCompleted}\n                />\n              )}\n              <ButtonAdd showFormForAddTask={showFormForAddTask}/>\n            </>\n          : <ButtonAdd showFormForAddTask={showFormForAddTask}/>\n      }\n    </div>\n  );\n};\n\nexport default TasksContainer;\n","import React from 'react';\nimport './WeekView.css';\n\nconst WeekView = ({weekday}) => {\n  return (\n    <div className={\"WeekView\"}>\n      {weekday}\n    </div>\n  );\n};\n\nexport default WeekView;\n","import React from 'react';\nimport {getWeekdays} from '../../logic';\nimport WeekView from \"../../components/WeekView\";\nimport './WeekContainer.css';\n\nconst WeekContainer = () => {\n\n  const weekdays = getWeekdays();\n  return (\n    <div className={\"WeekContainer\"}>\n      {weekdays.map((weekday, i) =>\n        <WeekView  key={i}\n                   weekday={weekday}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default WeekContainer;\n","import React from 'react';\nimport './Arrow.css';\n\nconst Arrow = ({direction, toSelectedDate}) => {\n  return (\n    <div className=\"Arrow\" onClick={toSelectedDate}>\n      <i className={direction} aria-hidden=\"true\"></i>\n    </div>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\nimport {selectedMonthByLetters} from '../../logic';\nimport './MonthHeader.css';\n\nconst MonthHeader = ({date}) => {\n  return (\n    <div className={\"MonthHeader\"}>\n      {selectedMonthByLetters(date)}\n    </div>\n  );\n};\n\nexport default MonthHeader;\n","import React from 'react';\nimport Arrow from '../../components/Arrow';\nimport './Header.css';\nimport MonthHeader from \"../../components/MonthHeader\";\n\n\nconst Header = ({selectedDate, toSelectedDate}) => {\n\n  return (\n    <div className={\"Header\"}>\n      <Arrow  direction={\"fa fa-angle-left\"}\n              toSelectedDate={toSelectedDate}\n      />\n      <MonthHeader date={selectedDate}/>\n      <Arrow  direction={\"fa fa-angle-right\"}\n              toSelectedDate={toSelectedDate}\n      />\n    </div>\n  );\n};\n\nexport default Header;\n","import React, {useState} from 'react';\nimport * as moment from 'moment';\nimport DatesContainer from \"../DatesContainer\";\nimport TasksContainer from \"../TasksContainer\";\nimport WeekContainer from \"../WeekContainer\";\nimport Header from \"../Header\";\nimport './CalendarTasks.css';\n\nconst CalendarAndTasks = () => {\n\n  const [tasks, setTasks] = useState([]);\n  const [datesSet, setDatesSet] = useState(new Set());\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [id, setId] = useState(0);\n  const [isAddTask, setIsAddTask] = useState(false);\n  const [changedTask, setChangedTask] = useState({id: '', description: '', time: ''});\n\n  const addTask = (e, date, {descr, time, completed}) => {\n    e.preventDefault();\n    if(!descr && !time) {\n      alert('Enter description and time');\n      return;\n    }\n    if (!descr) {\n      alert('Enter description');\n      return;\n    }\n    if (!time) {\n      alert('Enter time');\n      return;\n    }\n    setTasks(datesSet.has(date)\n      ? tasks.map((task) => {\n        const key = Object.keys(task)[0];\n        return key === date ? { [date]: task[key].concat({descr, time, id: id, completed}) }: task })\n      : [...tasks, {[date]: [{descr, time, id: id, completed}]}]\n    );\n    setDatesSet(datesSet.add(date));\n    setId(id + 1);\n    setIsAddTask(false);\n  };\n\n  const deleteTask = (id, date) => {\n    setTasks(tasks.map((item) => {\n        const key = Object.keys(item)[0];\n        return key === date\n          ? {[key]: item[key].filter((value) => value.id !== id)}\n          : item\n      })\n    );\n  };\n\n  const changeDate = (e) => {\n    if(e.target.className === 'DayView DayView__active' || e.target.className === 'DayView DayView__noactive') {\n      setSelectedDate(moment(e.target.dataset.date, 'D.MM.YYYY'));\n    }\n    if(e.target.className === 'fa fa-angle-left')\n      setSelectedDate(moment(selectedDate).subtract(1, 'month'));\n    if(e.target.className === 'fa fa-angle-right')\n      setSelectedDate(moment(selectedDate).add(1, 'month'));\n  };\n\n  const changeTask = (e, id, descr, time) => {\n    e.preventDefault();\n    setIsAddTask(true);\n    setChangedTask({id, description: descr, time});\n    if(e.target.innerHTML === \"Change task\") {\n      setTasks(tasks.map((item) => {\n          const key = Object.keys(item)[0];\n          return key === moment(selectedDate).format('D.MM.YYYY')\n            ? {[key]: item[key].map((value) => value.id === id\n                ? {id, descr, time}\n                : value\n              )}\n            : item\n        })\n      );\n      setIsAddTask(false);\n      setChangedTask({id: '', description: '', time: ''})\n    }\n  };\n\n  const changeCompleted = (id, date, completed) => {\n    setTasks(tasks.map((item) => {\n        const key = Object.keys(item)[0];\n        return key === date\n          ? {[key]: item[key].map((value) => value.id === id\n              ? {...value, completed: !completed}\n              : value\n            )}\n          : item\n      })\n    );\n  };\n\n  const showFormForAddTask = () => {\n    setIsAddTask(true);\n  };\n\n  const closeFormForAddTask = () => {\n    setIsAddTask(false);\n  };\n\n  return (\n    <div className=\"CalendarAndTasks\">\n      <Header selectedDate={selectedDate}\n              toSelectedDate={changeDate}\n\n      />\n      <WeekContainer/>\n      <DatesContainer selectedDate={selectedDate}\n                      toSelectedDate={changeDate}\n                      tasks = {tasks}\n      />\n      <TasksContainer\n                      isAddTask={isAddTask}\n                      selectedDate={selectedDate}\n                      addTask={addTask}\n                      tasks = {tasks}\n                      changeTask={changeTask}\n                      deleteTask={deleteTask}\n                      showFormForAddTask={showFormForAddTask}\n                      closeFormForAddTask={closeFormForAddTask}\n                      changedTask={changedTask}\n                      changeCompleted={changeCompleted}\n      />\n     </div>\n  );\n};\n\nexport default CalendarAndTasks;\n","import React from 'react';\nimport CalendarAndTasks from '../CalendarTasks';\n\nconst App =() => {\n    return (\n      <div className=\"App\">\n        <CalendarAndTasks/>\n      </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}