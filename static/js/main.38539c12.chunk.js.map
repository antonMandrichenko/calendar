{"version":3,"sources":["actions/index.js","components/Arrow/index.js","components/TaskInDate/index.js","components/DayView/index.js","components/ShowMonth/index.js","containers/DatesContainer/index.js","components/ButtonClose/index.js","components/newTaskForm/index.js","components/ButtonDelete/index.js","components/TaskView/index.js","components/ButtonAdd/index.js","containers/TasksContainer/index.js","containers/CalendarTasks/index.js","containers/CalendarTasks/redux.js","containers/App/index.js","reducers/tasks.js","reducers/date.js","reducers/add.js","reducers/index.js","index.js"],"names":["nextTaskId","Arrow","_ref","direction","toSelectedDate","react_default","a","createElement","className","onClick","TaskInDate","DayView","props","data-date","date","tasks","filter","task","time","map","item","i","components_TaskInDate","key","day","ShowMonth","array","toAddTask","monthArr","slice","indexOf","monthSelected","components_DayView","DatesContainer","toSelectMonth","selectedMonth","startOfMonth","moment","startOf","startCalendar","clone","arrayOfCalendar","startWeekday","weekday","weekdays","Sun","shift","push","getWeekdays","subtract","length","format","add","beginCalendar","selectedMonthByLetters","concat","month","get","components_Arrow","components_ShowMonth","ButtonClose","closeFormForAddTask","TaskForm","inputValue","inputTime","toInputDescription","e","target","dataset","desc","value","components_ButtonClose","htmlFor","type","id","placeholder","data-time","onChange","data-desc","ButtonDelete","deleteTask","TaskView","beginTime","description","components_ButtonDelete","ButtonAdd","showFormForAddTask","TasksContainer","wantToAddTask","components_newTaskForm","data","components_TaskView","components_ButtonAdd","connect","state","selectedDate","dispatch","addTask","toWantAddTask","payload","changeAdd","toSelectedMonth","dontSelectedMonth","preventDefault","alert","containers_DatesContainer","containers_TasksContainer","App","CalendarTasks","arguments","undefined","action","Object","toConsumableArray","completed","initialState","selectedYear","today","objectSpread","combineReducers","store","createStore","rootReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.38539c12.chunk.js","sourcesContent":["let nextTaskId = 0;\nexport const addTask = (description, date, beginTime) => ({\n  type: 'ADD_TASK',\n  date,\n  id: nextTaskId++,\n  description,\n  beginTime\n});\n\nexport const deleteTask = (id) => ({\n  type: 'DELETE_TASK',\n  id\n});\n\nexport const wantToAddTask = () => ({\n  type: 'WANT_TO_ADD_TASK',\n  payload: true\n});\n\nexport const changeAddTask = () => ({\n  type: 'CHANGE_ADD_TASK',\n  payload: false\n});\n\nexport const selectedDate = (date) => ({\n  type: 'SELECTED_DATE',\n  date\n});\n\nexport const selectedMonth = (date) => ({\n  type: 'SELECTED_MONTH',\n  date\n});\n\nexport const dontSelectedMonth = () => ({\n  type: 'DONT_SELECTED_MONTH',\n  payload: ''\n});\n\n","import React from 'react';\nimport './Arrow.css';\n\nconst Arrow = ({direction, toSelectedDate}) => {\n  return (\n    <div className=\"Arrow\" onClick={toSelectedDate}>\n      <i className={direction}></i>\n    </div>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\nimport './TaskInDate.css';\n\nconst TaskInDate = () => {\n  return (\n    <i className=\"TaskInDate far fa-calendar-plus\"></i>\n  );\n};\n\nexport default TaskInDate;\n","import React from 'react';\nimport './DaysView.css';\nimport TaskInDate from \"../TaskInDate\";\n\nconst DayView = (props) => {\n  return (\n    <div className={`DayView `+ props.className}\n         onClick={props.toSelectedDate}\n         data-date={props.date}>\n      {props.tasks.filter((task) =>\n        task.time === props.date\n      ).map((item,i) => {\n          if (i === 0) return <TaskInDate key={i}/>\n        }\n      )}\n      {props.day}\n    </div>\n  );\n};\n\nexport default DayView;\n","import React from 'react';\nimport DayView from \"../../components/DayView\";\n\nconst ShowMonth = ({array, date, tasks, toSelectedDate, toAddTask}) => {\n\n  return (\n    <div className=\"DaysContainer\">\n      {array.map((day, i) => {\n          const monthArr = day.slice(day.indexOf('.')+1, day.indexOf('.')+3);\n          const monthSelected = date.slice(date.indexOf('.')+1, date.indexOf('.')+3);\n          return <DayView key={i}\n                          tasks={tasks}\n                          day={i<7\n                            ? day\n                            : day.slice(0, day.indexOf('.'))}\n                          date={day}\n                          className= {\n                            i<7\n                              ? 'alert alert-secondary'\n                              : monthArr !== monthSelected\n                              ? 'alert alert-dark'\n                              : date === day\n                                ? 'alert alert-warning'\n                                : 'alert alert-light'\n                          }\n                          toSelectedDate={toSelectedDate}\n                          toAddTask={toAddTask}\n          />\n        }\n      )}\n    </div>\n  );\n};\n\nexport default ShowMonth;\n","import React from 'react';\nimport * as moment from 'moment';\n// import DayView from '../../components/DayView'\nimport './DatesContainer.css';\nimport Arrow from \"../../components/Arrow\";\nimport ShowMonth from \"../../components/ShowMonth\";\n\nconst DatesContainer = ({ date,\n                          toSelectedDate,\n                          tasks,\n                          toAddTask,\n                          toSelectMonth,\n                          selectedMonth\n}) => {\n\n  const getWeekdays = () => {\n    const weekdays = moment.weekdaysShort();\n    const Sun = weekdays.shift();\n    weekdays.push(Sun);\n    return weekdays;\n  };\n\n  const beginCalendar = () => {\n    const startOfMonth = moment(date, 'D.MM.YYYY').startOf('month');\n    const startCalendar = startOfMonth.clone();\n    const lengthOfCalendar = 41;\n    const arrayOfCalendar = [];\n    const startWeekday = startOfMonth.weekday();\n    const weekdays = getWeekdays();\n    startCalendar.subtract(startWeekday-1, 'days');\n    for(let i = 0; i <= lengthOfCalendar+weekdays.length; i++) {\n      if (i < weekdays.length) {\n        arrayOfCalendar.push(weekdays[i]);\n      } else {\n        arrayOfCalendar.push(startCalendar.format('D.MM.YYYY'));\n        startCalendar.add(1, 'days');\n      }\n    }\n    return arrayOfCalendar;\n  };\n\n  const array = beginCalendar();\n\n  const selectedMonthByLetters = `${moment.months().filter((month,i) => \n    i === selectedMonth)[0]} \n      ${moment(date, 'D.MM.YYYY').get('year')}`;\n  return (\n    <div className=\"DatesContainer alert alert-secondary col-lg-6\">\n      <div className=\"DatesContainer__title\">\n        <Arrow direction={\"fas fa-angle-left\"}\n               toSelectedDate={toSelectedDate}\n        />\n        <div className=\"DatesContainer__title_text\"\n             onClick={()=>{toSelectMonth(date)}}>\n          {selectedMonth === ''\n            ? date\n            : selectedMonthByLetters}\n        </div>\n        <Arrow direction={\"fas fa-angle-right\"}\n               toSelectedDate={toSelectedDate}\n        />\n      </div>\n      <ShowMonth array={array}\n                 date={date}\n                 tasks={tasks}\n                 toSelectedDate={toSelectedDate}\n                 toAddTask={toAddTask}\n      />\n    </div>\n  );\n};\n\nexport default DatesContainer;\n","import React from 'react';\nimport './ButtonClose.css';\n\nconst ButtonClose = ({closeFormForAddTask}) => {\n\n  return (\n    <div className=\"ButtonClose btn btn-light\"\n         onClick={closeFormForAddTask}>\n      X\n    </div>\n  );\n};\n\nexport default ButtonClose;\n","import React from 'react';\nimport ButtonClose from '../../components/ButtonClose';\nimport './newTaskForm.css';\n\nconst TaskForm = ({toAddTask, closeFormForAddTask}) => {\n\n  let inputValue = '';\n  let inputTime = '';\n\n  const toInputDescription = (e) => {\n    if(e.target.dataset.desc === 'Description')\n      inputValue = e.target.value;\n    if(e.target.dataset.time === 'Time')\n      inputTime = e.target.value;\n  };\n\n  return (\n    <form className=\"TaskForm\">\n      <div><ButtonClose closeFormForAddTask={closeFormForAddTask}/></div>\n      <h2 className=\"text-center\">New task</h2>\n      <div className=\"form-group\">\n        <label htmlFor=\"inputDescription\">Time</label>\n        <input type=\"time\"\n               className=\"form-control\"\n               id=\"inputDescription\"\n               placeholder=\"Time\"\n               data-time=\"Time\"\n               onChange={(e) => {toInputDescription(e)}}/>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"inputDescription\">Description</label>\n        <input type=\"text\"\n               className=\"form-control\"\n               id=\"inputDescription\"\n               placeholder=\"Description\"\n               data-desc=\"Description\"\n               onChange={(e) => {toInputDescription(e)}}/>\n      </div>\n      <button type=\"submit\"\n              onClick={(e)=>{toAddTask(e,inputValue, inputTime)}}\n              className=\"btn btn-primary\">\n        Add task\n      </button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport './ButtonDelete.css';\n\nconst ButtonDelete = ({deleteTask, id}) => {\n\n  return (\n    <div className=\"ButtonDelete btn btn-light\"\n         onClick={()=>{deleteTask(id)}}>\n      X\n    </div>\n  );\n};\n\nexport default ButtonDelete;\n","import React from 'react';\nimport ButtonDelete from \"../ButtonDelete\";\n\nconst TaskView = ({item, deleteTask, date}) => {\n\n  return (\n    <div className=\"row alert alert-primary\">\n      <div className=\"col-lg-2\">\n        {item.beginTime}\n      </div>\n      <div className=\"col-lg-9\">\n        {item.description}\n      </div>\n      <div className=\"col-lg-1\">\n        <ButtonDelete deleteTask={deleteTask}\n                id={item.id}\n                date={date}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TaskView;\n","import React from 'react';\nimport './ButtonAdd.css';\n\nconst ButtonAdd = ({showFormForAddTask}) => {\n\n  return (\n    <div className=\"ButtonAdd btn btn-light\"\n         onClick={showFormForAddTask}>\n      +\n    </div>\n  );\n};\n\nexport default ButtonAdd;\n","import React from 'react';\nimport TaskForm from '../../components/newTaskForm';\nimport TaskView from '../../components/TaskView';\nimport ButtonAdd from \"../../components/ButtonAdd\";\nimport './TasksContainer.css';\n\nconst TasksContainer = ({ date,\n                          toAddTask,\n                          tasks,\n                          wantToAddTask,\n                          deleteTask,\n                          showFormForAddTask,\n                          closeFormForAddTask\n}) => {\n  return (\n    <div className=\"TasksContainer alert alert-secondary col-md-6\">\n      <h3 className=\"text-center\">{date}</h3>\n      {wantToAddTask\n        ? <TaskForm toAddTask={toAddTask} closeFormForAddTask={closeFormForAddTask}/>\n        : tasks.filter((task) =>\n          task.time === date).length !== 0\n            ? tasks.filter((task) =>\n              task.time === date\n              ).map((task) =>\n                task.data.map((item, i) =>\n                  <TaskView key={i}\n                            item={item}\n                            deleteTask={deleteTask}\n                            date={date}\n                  />\n                )\n              )\n              : null\n      }\n      {wantToAddTask\n        ? null\n        : <div className=\"row alert alert-success\">\n            <div className=\"col-11\">Add task for this day</div>\n            <div className=\"col-1\">\n              <ButtonAdd showFormForAddTask={showFormForAddTask}/>\n            </div>\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default TasksContainer;\n","import React from 'react';\nimport * as moment from 'moment';\nimport { connect } from \"react-redux\";\nimport {mapStateToProps, mapDispatchToProps} from \"./redux\";\nimport DatesContainer from \"../DatesContainer\";\nimport TasksContainer from \"../TasksContainer\";\n\nconst CalendarAndTasks = ({ date,\n                            toSelectedDate,\n                            tasks,\n                            toAddTask,\n                            toWantAddTask,\n                            wantToAddTask,\n                            changeAdd,\n                            deleteTask,\n                            toSelectedMonth,\n                            selectedMonth,\n                            dontSelectedMonth\n}) => {\n\n  const changeDate = (e) => {\n    if(e.target.className === 'DayView alert alert-light' || e.target.className === 'DayView alert alert-dark') {\n      toSelectedDate(e.target.dataset.date);\n    }\n    if(e.target.className === 'fas fa-angle-left') {\n      if(selectedMonth === '') {\n        toSelectedDate(moment(date, 'D.MM.YYYY').subtract(1, 'day').format('D.MM.YYYY'))\n      } else {\n        toSelectedDate(moment(date, 'D.MM.YYYY').subtract(1, 'month').format('D.MM.YYYY'));\n        toSelectedMonth(moment(date, 'D.MM.YYYY').subtract(1, 'month').format('D.MM.YYYY'));\n      }\n    }\n    if(e.target.className === 'fas fa-angle-right') {\n      if(selectedMonth === '') {\n        toSelectedDate(moment(date, 'D.MM.YYYY').add(1, 'day').format('D.MM.YYYY'));\n      } else {\n        toSelectedDate(moment(date, 'D.MM.YYYY').add(1, 'month').format('D.MM.YYYY'));\n        toSelectedMonth(moment(date, 'D.MM.YYYY').add(1, 'month').format('D.MM.YYYY'));\n      }\n    }\n    if(e.target.className === 'DayView alert alert-warning') {\n      toWantAddTask();\n    }\n  };\n\n  const addTask = (e, description, beginTime) => {\n    e.preventDefault();\n    if(!description && !beginTime) {\n      alert('Enter description and time');\n      return;\n    }\n    if (!description) {\n      alert('Enter description');\n      return;\n    }\n    if (!beginTime) {\n      alert('Enter time');\n      return;\n    }\n    toAddTask(description, date, beginTime);\n    changeAdd();\n  };\n\n  const toDeleteTask = (id) => {\n    deleteTask(id);\n  };\n\n  const showFormForAddTask = () => {\n    toWantAddTask();\n  };\n\n  const closeFormForAddTask = () => {\n    changeAdd();\n  };\n\n  const toSelectMonth = (date) => {\n    selectedMonth !== ''\n      ? dontSelectedMonth()\n      : toSelectedMonth(date);\n  };\n\n  return (\n    <div className=\"CalendarAndTasks\">\n      <DatesContainer date={date}\n                      toSelectedDate={changeDate}\n                      toAddTask={addTask}\n                      tasks = {tasks}\n                      toSelectMonth={toSelectMonth}\n                      selectedMonth={selectedMonth}\n      />\n      <TasksContainer date={date}\n                      toAddTask={addTask}\n                      tasks = {tasks}\n                      wantToAddTask={wantToAddTask}\n                      deleteTask={toDeleteTask}\n                      showFormForAddTask={showFormForAddTask}\n                      closeFormForAddTask={closeFormForAddTask}\n      />\n     </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps)(CalendarAndTasks)\n","import {\n  addTask,\n  selectedDate,\n  wantToAddTask,\n  changeAddTask,\n  deleteTask,\n  selectedMonth,\n  dontSelectedMonth\n} from '../../actions';\n\nexport const mapStateToProps = (state) => ({\n  date: state.date.selectedDate,\n  tasks: state.tasks,\n  wantToAddTask: state.add,\n  selectedMonth: state.date.selectedMonth\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  toAddTask: (description, date, beginTime) => dispatch(addTask(description, date, beginTime)),\n  toSelectedDate: (date) => dispatch(selectedDate(date)),\n  toWantAddTask: () => dispatch(wantToAddTask()),\n  changeAdd: () => dispatch(changeAddTask()),\n  deleteTask: (id) => dispatch(deleteTask(id)),\n  toSelectedMonth: (date) => dispatch(selectedMonth(date)),\n  dontSelectedMonth: () => dispatch(dontSelectedMonth())\n});\n\n","import React from 'react';\nimport CalendarAndTasks from '../CalendarTasks';\n\nconst App =() => {\n    return (\n      <div className=\"container App\">\n        <CalendarAndTasks/>\n      </div>\n    );\n};\n\nexport default App;\n","const tasks = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return [\n        ...state,\n        {\n          time: action.date,\n          data:[{\n            id: action.id,\n            beginTime: action.beginTime,\n            description: action.description,\n            completed: false}\n          ]\n        }\n      ];\n\n    case 'DELETE_TASK':\n      return state.filter((item) =>\n       item.data[0].id !== action.id\n      );\n\n    default:\n      return state\n  }\n};\nexport default tasks\n","import * as moment from 'moment';\n\nconst initialState = {\n  selectedDate: moment().format('D.MM.YYYY'),\n  selectedYear: '',\n  selectedMonth: '',\n  today: moment().format('D.MM.YYYY')\n};\n\nconst date = (state = initialState, action) => {\n  switch (action.type) {\n\n    case 'SELECTED_DATE':\n      return {\n        ...state,\n        selectedDate: action.date,\n        today: moment().format('D.MM.YYYY')\n      };\n\n    case 'SELECTED_MONTH':\n      return {\n        ...state,\n        selectedMonth: moment(action.date, 'D.MM.YYYY').get('month'),\n        today: moment().format('D.MM.YYYY')\n      };\n\n    case 'DONT_SELECTED_MONTH':\n      return {\n        ...state,\n        selectedMonth: action.payload,\n        today: moment().format('D.MM.YYYY')\n      };\n\n    default:\n      return state\n  }\n};\n\nexport default date\n","const add = (state = false, action) => {\n  switch (action.type) {\n\n    case 'WANT_TO_ADD_TASK':\n      return action.payload;\n\n    case 'CHANGE_ADD_TASK':\n      return action.payload;\n\n    default:\n      return state\n  }\n};\n\nexport default add\n","import { combineReducers } from 'redux';\nimport tasks from \"./tasks\";\nimport date from './date';\nimport add from './add';\n\nexport default combineReducers({\n  tasks,\n  date,\n  add\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './containers/App';\nimport rootReducers from './reducers';\nimport './index.css';\n\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware()) );\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}